/** Declaration file generated by dts-gen */

export class Document {
    constructor(a: any);

    add(a: any, b: any, c: any): any;

    addAsync(...args: any[]): any;

    append(a: any, b: any): any;

    appendAsync(...args: any[]): any;

    contain(a: any): any;

    export(a: any, b: any, c: any, d: any, e: any): void;

    get(a: any): any;

    import(a: any, b: any): void;

    remove(a: any): any;

    removeAsync(...args: any[]): any;

    search(a: any, b: any, c: any, d: any): any;

    searchAsync(...args: any[]): any;

    searchCache(a: any, b: any, c: any): any;

    set(a: any, b: any): any;

    update(a: any, b: any): any;

    updateAsync(...args: any[]): any;

}

export class Index {
    constructor(a: any, b: any);

    add(a: any, b: any, c: any, d: any): any;

    addAsync(...args: any[]): any;

    append(a: any, b: any): any;

    appendAsync(...args: any[]): any;

    contain(a: any): any;

    export(a: any, b: any, c: any, d: any, e: any): any;

    import(a: any, b: any): void;

    remove(a: any, b: any): any;

    removeAsync(...args: any[]): any;

    search(a: any, b: any, c: any): any;

    searchAsync(...args: any[]): any;

    searchCache(a: any, b: any, c: any): any;

    update(a: any, b: any): any;

    updateAsync(...args: any[]): any;

}

export class Worker {
    constructor(a: any);

    add(...args: any[]): any;

    addAsync(...args: any[]): any;

    append(...args: any[]): any;

    appendAsync(...args: any[]): any;

    remove(...args: any[]): any;

    removeAsync(...args: any[]): any;

    search(...args: any[]): any;

    searchAsync(...args: any[]): any;

    update(...args: any[]): any;

    updateAsync(...args: any[]): any;

}

export function registerCharset(a: any, b: any): void;

export function registerLanguage(a: any, b: any): void;

